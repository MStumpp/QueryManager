{"name":"QueryManager","tagline":"","body":"# Create QueryManager instance\r\n\r\nAllocate an instance of the **QueryManager** in the following way.\r\n```\r\nQueryManager *manager = [QueryManager instance];\r\n```   \r\n\r\n## Configure QueryManager instance\r\n\r\nYou may set the maximum number of concurrent connections for all queues.\r\n```\r\n[manager setNumberOfMaxConcurrentConnections:10];\r\n```   \r\n\r\n* numberMaxConcurrent: Maximum number of concurrent connections over all queues. Lowest value is 0. Use _tUnlimitedConcurrentConnections_ for unlimited number of connections. \r\n\r\n# Create Queue instance\r\n\r\nAllocate an instance of **Queue** in the following way.\r\n```\r\nQueue *queue = [[Queue instance] initWithIdentifier:@\"queue 1\" queueMaxSize:tUnlimitedQueueSize numberMaxConcurrent:tUnlimitedConcurrentConnections processOrder:tfifo finishHigherPrioFirst:TRUE pauseWhileLoading:TRUE cancelWhileLoading:TRUE];  \r\n```\r\n\r\n* identifier: A unique identifier per queue.\r\n* queueMaxSize: Maximum size of a queue, meaning number of Query instances in state _initial_, _loading_, _pausing_ or _paused_ (Query instances in state _loaded_, _cancelling_ or _cancelled_ are not count towards this metric). Use _tUnlimitedQueueSize_ for unlimited number of Query instances. \r\n* numberMaxConcurrent: Maximum number of concurrent connections over all queues. Lowest value is 0. Use _tUnlimitedConcurrentConnections_ for unlimited number of connections. \r\n* processOrder: Order of how Query instances will be processed. Use _tfifo_ for first in first out or _tlifo_ for last in first out.\r\n* finishHigherPrioFirst: \r\n* pauseWhileLoading: Pauses all Query instances which come after the added one, from the other queues as well as the same queue.\r\n* cancelWhileLoading: Cancels all Query instances which come after the added one, from the other queues as well as the same queue.\r\n\r\n## Add Queue instance to QueryManager\r\n\r\nRegister a Queue instance and set a priority.\r\n```\r\nqueue = [manager addQueue:queue prio:0];\r\n```\r\n\r\nEvery QueryManager can have only one instance of Queue of the same priority. \r\n\r\nLowest value for priority is 0 (highest priority).      \r\n    \r\n# Create Query instance\r\n\r\n```\r\nQueryTicket *ticket = [[queue addQuery:[ConcreteQuery instance] andPrio:0] process:^() {\r\n\r\n}];\r\n```\r\n\r\n```\r\nQueryTicket *ticket = [[ConcreteQuery instanceWithQueue:queue andPrio:0] process:^() {\r\n\r\n}];\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}