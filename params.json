{"name":"QueryManager","tagline":"","body":"## QueryManager\r\n\r\n### Create a new instance\r\n\r\nAllocate an instance of the **QueryManager** in the following way.\r\n```\r\nQueryManager *manager = [QueryManager instance];\r\n```   \r\n\r\n## Queue\r\n\r\n### Create a new instance\r\n\r\nAllocate an instance of **Queue** in the following way.\r\n```\r\nQueue *queue = [manager initQueueWithName:@\"queue1\"]\r\n```\r\n* name: A unique name per queue.\r\n\r\n### Retrieve an instance\r\n\r\n```\r\nQueue *queue = [manager queueWithName:@\"queue1\"]\r\n``` \r\n\r\n### Properties of an instance\r\n\r\n* (NSArray*)operations: Queries in the queue.\r\n* (NSUInteger)operationCount: Number of queries in the queue.\r\n* (NSInteger)maxConcurrentOperationCount: Maximum of concurrent executing queries.\r\n* (BOOL)isSuspended: True if a queue is suspended, false otherwise.\r\n\r\n### Actions on an instance\r\n\r\n* (void)cancelAllOperations: Sets all queries in the queue to state \"isCancelled\".\r\n* (void)setMaxConcurrentOperationCount:(NSInteger)count: Sets the maximum of concurrent executing queries.\r\n* (void)setSuspended:(BOOL)suspend: Suspends (true) or resumes (false) the execution of queries.\r\n    \r\n## Query\r\n\r\n### Implement a query\r\n```\r\n@interface QueryImpl : Query\r\n@end\r\n\r\n@implementation QueryImpl\r\n-(void)load:(id)data\r\n{\r\n    - do the main stuff\r\n    - whenever possible, check [self isCancelled], cancel if possible\r\n    - must call [self loadedWithData:data andError:error] when finished\r\n}\r\n\r\n-(void)cancelled:(id)data\r\n{\r\n    - called exactly once\r\n    - can call setData and/or setError before onCompletion handler gets called\r\n}\r\n@end\r\n```\r\n\r\n### Create an instance\r\n```\r\nQuery *query = [[QueryImpl instanceWithQueue:queue] execute:(id)data onCompletion:^(int state, id data, NSError *error) {\r\n   ...\r\n}];\r\n```\r\n\r\n### Properties of an instance\r\n\r\n* (BOOL)isCancelled: Indicating whether in instance is cancelled.\r\n* (BOOL)isExecuting: Indicating whether in instance is executing.\r\n* (BOOL)isFinished: Indicating whether in instance is finished.\r\n* (BOOL)isReady: Indicating whether in instance is ready.\r\n* (NSOperationQueuePriority)queuePriority: Returns the priority of the query in a queue.\r\n\r\n### Actions on an instance\r\n\r\n* (void)cancel: Cancels a query.\r\n* (void)setQueuePriority:(NSOperationQueuePriority)priority: Sets the priority of the query.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}